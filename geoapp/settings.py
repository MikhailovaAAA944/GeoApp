"""
Django settings for geoapp project.

Generated by 'django-admin startproject' using Django 5.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import environ

# Работа с env.dev
env = environ.Env()

environ.Env.read_env(env_file=Path('.env'))


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = int(env('DEBUG', default=1))

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_minio_backend',
    'rocket',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'geoapp.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'geoapp.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': env('DJANGO_DB_NAME'), 
        'USER': env('DJANGO_DB_USER'),
        'PASSWORD': env('DJANGO_DB_PASSWORD'),
        # 'HOST': 'db',  
        'HOST': '127.0.0.1',  
        'PORT': env('DJANGO_DB_PORT'),
        'OPTIONS': {
            'options': '-c search_path=django,public',
        },
        
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'ru'

TIME_ZONE = 'Europe/Moscow'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = (BASE_DIR / 'static')

MEDIA_URL = '/media/'
MEDIA_ROOT = (BASE_DIR / 'media')
# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Константы для расчетов
GRAVITATIONAL_CONSTANT = 6.67430e-11  # м³·кг⁻¹·с⁻²
PAYLOAD_COEFFICIENT = 0.3  # Эмпирический коэффициент для расчета ПН



from datetime import timedelta
from typing import List, Tuple


MINIO_ENDPOINT = 'localhost:9000'
MINIO_ACCESS_KEY = 'minio'
MINIO_SECRET_KEY = 'minio124'
MINIO_USE_HTTPS = False


# MINIO_EXTERNAL_ENDPOINT = "localhost:9000"  # Default is same as MINIO_ENDPOINT
# MINIO_EXTERNAL_ENDPOINT_USE_HTTPS = False  # Default is same as MINIO_USE_HTTPS
# MINIO_REGION = 'us-east-1'  # Default is set to None
# MINIO_URL_EXPIRY_HOURS = timedelta(days=1)  # Default is 7 days (longest) if not defined
# MINIO_CONSISTENCY_CHECK_ON_START = False

# Bucket names
MINIO_MEDIA_BUCKET = 'django-media'
MINIO_STATIC_BUCKET = 'django-static'

MINIO_PRIVATE_BUCKETS = [
    MINIO_MEDIA_BUCKET
]
MINIO_PUBLIC_BUCKETS = [
   MINIO_STATIC_BUCKET
]
 
MINIO_BUCKET_CHECK_ON_SAVE = True 


 
STORAGES = {
    "default": {
        "BACKEND": "django_minio_backend.models.MinioBackend",
        "OPTIONS": {
            "bucket_name": MINIO_MEDIA_BUCKET,
            "base_url": f"http://localhost:9000/{MINIO_MEDIA_BUCKET}/",
            "endpoint": MINIO_ENDPOINT,
            "access_key": MINIO_ACCESS_KEY,
            "secret_key": MINIO_SECRET_KEY,
            "secure": MINIO_USE_HTTPS,
        }
    },
    "staticfiles": {
        "BACKEND": "django_minio_backend.models.MinioBackendStatic",
        "OPTIONS": {
            "bucket_name": MINIO_STATIC_BUCKET,
            "base_url": f"http://localhost:9000/{MINIO_STATIC_BUCKET}/",
            "endpoint": MINIO_ENDPOINT,
            "access_key": MINIO_ACCESS_KEY,
            "secret_key": MINIO_SECRET_KEY,
            "secure": MINIO_USE_HTTPS,
        }
    }
}

# Media files configuration
MEDIA_URL = f'http://localhost:9000/{MINIO_MEDIA_BUCKET}/'
STATIC_URL = f'http://localhost:9000/{MINIO_STATIC_BUCKET}/'


import certifi
import urllib3
import os 
# Custom HTTP Client (OPTIONAL)
timeout = timedelta(minutes=5).seconds
ca_certs = certifi.where()
MINIO_HTTP_CLIENT = urllib3.PoolManager(
    timeout=urllib3.util.Timeout(connect=timeout, read=timeout),
    maxsize=10,
    cert_reqs='CERT_REQUIRED',
    ca_certs=ca_certs,
    retries=urllib3.Retry(
        total=5,
        backoff_factor=0.2,
        status_forcelist=[500, 502, 503, 504]
    )
)